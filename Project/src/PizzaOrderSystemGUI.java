import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author CYH
 */
public class PizzaOrderSystemGUI extends javax.swing.JFrame {

    ArrayList<Pizza> cart = new ArrayList<>();
    ArrayList<String> list_customer_data = new ArrayList<>();
    ArrayList<String> list_customer_order = new ArrayList<>();
    ArrayList<String> customer_order_toppings = new ArrayList<>();
    ArrayList<String> customer_order_size = new ArrayList<>();

    int repeat = 0;
    double totalPrice = 0;
    boolean loginSuccessful = false;
    boolean data_found = false;

    DecimalFormat dfZero = new DecimalFormat("0.00");

    String cus_account_name = null;
    String cus_account_id = null;
    String target_name = null;
    String target_id = null;

    String cus_order_id = null;
    String cus_order_name = null;
    String cus_order_toppings = null;
    String cus_order_size = null;
    String cus_order_date = null;

    String commonName = null;
    String commonID = null;

    /**
     * Creates new form PizzaOrderSystemGUI
     */
    public PizzaOrderSystemGUI() {

        initComponents();

        loadData();

        setDate();
    }

    private void loadData() {
        try {
            BufferedReader br = new BufferedReader(new FileReader("customer_data.txt"));
            BufferedReader br_order = new BufferedReader(new FileReader("customer_order.txt"));

            String line;
            while ((line = br.readLine()) != null) {
                list_customer_data.add(line);
            }

            while ((line = br_order.readLine()) != null) {
                list_customer_order.add(line);
            }

            br.close();

//            JOptionPane.showMessageDialog(null, "Loading...", "Success", JOptionPane.INFORMATION_MESSAGE);
            System.out.println("Data loaded successfully...");
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(btn_register, "File Not Found...", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(PizzaOrderSystemGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setDate() {
        Date date = Calendar.getInstance().getTime();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String current_date = dateFormat.format(date);

        field_date.setText(current_date);
        field_date.setEditable(false);
    }

    // ... Rest of your code
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkout_page = new javax.swing.JFrame();
        checkout = new javax.swing.JLabel();
        payment = new javax.swing.JButton();
        food_price = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        registration_page = new javax.swing.JFrame();
        title1 = new javax.swing.JLabel();
        cus_name1 = new javax.swing.JLabel();
        cus_id1 = new javax.swing.JLabel();
        cus_address1 = new javax.swing.JLabel();
        cus_email1 = new javax.swing.JLabel();
        cus_name_registration_field = new javax.swing.JTextField();
        cus_id_registration_field = new javax.swing.JTextField();
        cus_address_registration_field = new javax.swing.JTextField();
        cus_email_registration_field = new javax.swing.JTextField();
        btn_register = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();
        search_customer = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        btn_search_cus = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        label_cus_id = new javax.swing.JLabel();
        label_cus_name = new javax.swing.JLabel();
        label_order_toppings = new javax.swing.JLabel();
        label_order_size = new javax.swing.JLabel();
        label_order_date = new javax.swing.JLabel();
        btn_close = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        cus_name = new javax.swing.JLabel();
        cus_id = new javax.swing.JLabel();
        cus_name_field = new javax.swing.JTextField();
        cus_id_field = new javax.swing.JTextField();
        cus_register = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        text_date1 = new javax.swing.JLabel();
        field_date = new javax.swing.JTextField();
        text_toppings1 = new javax.swing.JLabel();
        text_size1 = new javax.swing.JLabel();
        field_toppings = new javax.swing.JComboBox();
        field_size = new javax.swing.JTextField();
        btn_show_customer_searching1 = new javax.swing.JButton();
        btn_order_pizza = new javax.swing.JButton();
        btn_checkout = new javax.swing.JButton();

        checkout.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        checkout.setText("========== CHECKOUT PAGE ==========");

        payment.setText("Payment");
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });

        food_price.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        food_price.setText("Total Price: ");

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout checkout_pageLayout = new javax.swing.GroupLayout(checkout_page.getContentPane());
        checkout_page.getContentPane().setLayout(checkout_pageLayout);
        checkout_pageLayout.setHorizontalGroup(
            checkout_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkout_pageLayout.createSequentialGroup()
                .addGroup(checkout_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkout_pageLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(checkout))
                    .addGroup(checkout_pageLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(food_price, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(checkout_pageLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(payment)
                        .addGap(18, 18, 18)
                        .addComponent(cancel)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        checkout_pageLayout.setVerticalGroup(
            checkout_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkout_pageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkout)
                .addGap(39, 39, 39)
                .addComponent(food_price)
                .addGap(50, 50, 50)
                .addGroup(checkout_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payment)
                    .addComponent(cancel))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        title1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        title1.setText("Customer Registration");

        cus_name1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cus_name1.setText("Name: ");

        cus_id1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cus_id1.setText("Id: ");

        cus_address1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cus_address1.setText("Address: ");

        cus_email1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cus_email1.setText("Email: ");

        btn_register.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btn_register.setText("Register");
        btn_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registerActionPerformed(evt);
            }
        });

        btn_back.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registration_pageLayout = new javax.swing.GroupLayout(registration_page.getContentPane());
        registration_page.getContentPane().setLayout(registration_pageLayout);
        registration_pageLayout.setHorizontalGroup(
            registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registration_pageLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registration_pageLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(title1))
                    .addGroup(registration_pageLayout.createSequentialGroup()
                        .addGroup(registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(registration_pageLayout.createSequentialGroup()
                                .addGroup(registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cus_address1)
                                    .addComponent(cus_email1)
                                    .addComponent(cus_id1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cus_name1))
                                .addGap(66, 66, 66))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registration_pageLayout.createSequentialGroup()
                                .addComponent(btn_register, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cus_address_registration_field)
                            .addComponent(cus_id_registration_field, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cus_name_registration_field, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cus_email_registration_field, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(btn_back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        registration_pageLayout.setVerticalGroup(
            registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registration_pageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title1)
                .addGap(18, 18, 18)
                .addGroup(registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cus_name1)
                    .addComponent(cus_name_registration_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cus_id1)
                    .addComponent(cus_id_registration_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cus_address1)
                    .addComponent(cus_address_registration_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cus_email_registration_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cus_email1))
                .addGap(29, 29, 29)
                .addGroup(registration_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_register, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_back))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        registration_pageLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_back, btn_register});

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Customer Searching");

        btn_search_cus.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_search_cus.setText("Search");
        btn_search_cus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_cusActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel2.setText("Customer ID: ");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel3.setText("Customer Name:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel4.setText("Oder Toppings: ");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel5.setText("Order Size: ");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel6.setText("Order Date: ");

        label_cus_id.setText("null");

        label_cus_name.setText("null");

        label_order_toppings.setText("null");

        label_order_size.setText("null");

        label_order_date.setText("null");

        btn_close.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btn_close.setText("Close");
        btn_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout search_customerLayout = new javax.swing.GroupLayout(search_customer.getContentPane());
        search_customer.getContentPane().setLayout(search_customerLayout);
        search_customerLayout.setHorizontalGroup(
            search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(search_customerLayout.createSequentialGroup()
                .addGroup(search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(search_customerLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(search_customerLayout.createSequentialGroup()
                                .addComponent(btn_search_cus)
                                .addGap(18, 18, 18)
                                .addComponent(btn_close, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)))
                    .addGroup(search_customerLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addGroup(search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(label_cus_name)
                                .addComponent(label_order_toppings)
                                .addComponent(label_cus_id))
                            .addComponent(label_order_size)
                            .addComponent(label_order_date))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        search_customerLayout.setVerticalGroup(
            search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(search_customerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_search_cus)
                    .addComponent(btn_close, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(label_cus_id))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(label_cus_name))
                .addGap(13, 13, 13)
                .addGroup(search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(label_order_toppings))
                .addGap(18, 18, 18)
                .addGroup(search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(label_order_size))
                .addGap(18, 18, 18)
                .addGroup(search_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(label_order_date))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        setTitle("Pizza Order System");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        title.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        title.setText("Welcome to Pizza Ordering System");

        cus_name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cus_name.setText("Name: ");

        cus_id.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cus_id.setText("Id: ");

        cus_register.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        cus_register.setText("Registration");
        cus_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cus_registerActionPerformed(evt);
            }
        });

        exit.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        text_date1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        text_date1.setText("Date: ");

        field_date.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        field_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_dateActionPerformed(evt);
            }
        });

        text_toppings1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        text_toppings1.setText("Toppings: ");

        text_size1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        text_size1.setText("Size:");

        field_toppings.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Chicken", "Tuna", "Pepperoni" }));
        field_toppings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_toppingsActionPerformed(evt);
            }
        });

        btn_show_customer_searching1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btn_show_customer_searching1.setText("Customer \nSearching");
        btn_show_customer_searching1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_show_customer_searching1ActionPerformed(evt);
            }
        });

        btn_order_pizza.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btn_order_pizza.setText("Order Pizza");
        btn_order_pizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_order_pizzaActionPerformed(evt);
            }
        });

        btn_checkout.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btn_checkout.setText("Checkout");
        btn_checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_checkoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(text_toppings1)
                                    .addComponent(text_size1)
                                    .addComponent(text_date1))
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(field_toppings, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(field_size)
                                    .addComponent(field_date)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cus_id, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cus_name))
                                .addGap(79, 79, 79)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cus_name_field)
                                    .addComponent(cus_id_field)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_show_customer_searching1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_order_pizza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cus_register)
                            .addComponent(btn_checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(title)
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_show_customer_searching1, cus_register, exit});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cus_name)
                    .addComponent(cus_name_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cus_id)
                    .addComponent(cus_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_toppings1)
                    .addComponent(field_toppings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_size1)
                    .addComponent(field_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_date1)
                    .addComponent(field_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cus_register, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btn_order_pizza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_show_customer_searching1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btn_checkout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        // TODO add your handling code here:
        String money = JOptionPane.showInputDialog(payment, "Please input the amount: ");
        try {
            double user_money = Double.parseDouble(money);

            if (user_money < totalPrice) {
                JOptionPane.showMessageDialog(payment, "Payment Unsuccessfully...Insufficient Money...", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                double change_amount = user_money - totalPrice;

                JOptionPane.showMessageDialog(null, "CHANGE AMOUNT: RM " + dfZero.format(change_amount));
                JOptionPane.showMessageDialog(null, "<<<THANK YOU. PLEASE COME AGAIN>>>", "Info", JOptionPane.INFORMATION_MESSAGE);
                checkout_page.dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(payment, "Payment Unsuccessfully...Please enter the money...", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_paymentActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        checkout_page.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void cus_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cus_registerActionPerformed
        registration_page.setVisible(true);
        registration_page.setSize(402, 342);
    }//GEN-LAST:event_cus_registerActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void btn_search_cusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_cusActionPerformed
        // TODO add your handling code here:
        loadData();

        String target_account_id = JOptionPane.showInputDialog(search_customer, "Enter Your ID:");

        for (int i = 0; i < list_customer_order.size(); i++) {

            if (list_customer_order.get(i).equals(target_account_id)) {
                label_order_toppings.setText("");
                label_order_size.setText("");

                label_cus_id.setText(list_customer_order.get(i));
                label_cus_name.setText(list_customer_order.get(i - 1));
                label_order_date.setText(list_customer_order.get(i + 3));

                customer_order_toppings.add(list_customer_order.get(i + 1));
                customer_order_size.add(list_customer_order.get(i + 2));

                for (String cus_order_toppings : customer_order_toppings) {
                    // Get the current text of the JLabel
                    String currentText = label_order_toppings.getText();

                    // Concatenate the new data with the existing text
                    String newText = currentText + cus_order_toppings + " | ";

                    // Set the updated text for the JLabel
                    label_order_toppings.setText(newText);

                    // Pause for a moment to see the changes (optional)
                }

                for (String cus_order_size : customer_order_size) {
                    // Get the current text of the JLabel
                    String currentText = label_order_size.getText();

                    // Concatenate the new data with the existing text
                    String newText = currentText + cus_order_size + " | ";

                    // Set the updated text for the JLabel
                    label_order_size.setText(newText);

                    // Pause for a moment to see the changes (optional)
                }

                label_cus_id.setFont(new Font("Arial", Font.BOLD, 13));
                label_cus_name.setFont(new Font("Arial", Font.BOLD, 13));
                label_order_toppings.setFont(new Font("Arial", Font.BOLD, 13));
                label_order_size.setFont(new Font("Arial", Font.BOLD, 13));
                label_order_date.setFont(new Font("Arial", Font.BOLD, 13));
            }
        }
    }//GEN-LAST:event_btn_search_cusActionPerformed

    private void field_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_dateActionPerformed

    private void field_toppingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_toppingsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_toppingsActionPerformed

    private void btn_show_customer_searching1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_show_customer_searching1ActionPerformed
        // TODO add your handling code here:
        search_customer.setVisible(true);
        search_customer.setSize(416, 342);
    }//GEN-LAST:event_btn_show_customer_searching1ActionPerformed

    private void btn_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registerActionPerformed
        // TODO add your handling code here:
        String customer_name = cus_name_registration_field.getText();
        String customer_id = cus_id_registration_field.getText();
        String customer_address = cus_address_registration_field.getText();
        String customer_email = cus_email_registration_field.getText();

        if (customer_name.isEmpty() || customer_id.isEmpty() || customer_address.isEmpty() || customer_email.isEmpty()) {
            JOptionPane.showMessageDialog(btn_register, "Please fill in all the information", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_name.isEmpty() || customer_name.matches(".*\\d.*")) {
            JOptionPane.showMessageDialog(btn_register, "Name cannot leave blank or contain a number...", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_id.length() < 6 || customer_id.length() > 6 || customer_id.matches(".*[a-zA-Z].*")) {
            JOptionPane.showMessageDialog(btn_register, "ID cannot contain a alphabet and should be 6 numbers only...", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_id.length() == 6) {

            try {
                BufferedWriter bw = new BufferedWriter(new FileWriter("customer_data.txt", true));

                bw.write(customer_name);
                bw.newLine();

                bw.write(customer_id);
                bw.newLine();

                bw.write(customer_address);
                bw.newLine();

                bw.write(customer_email);
                bw.newLine();

                // Close the BufferedWriter
                bw.close();

                System.out.println("Data has been written to the file.");

                JOptionPane.showMessageDialog(btn_register, "Successfully Register...", "Success", JOptionPane.INFORMATION_MESSAGE);

                cus_name_registration_field.setText("");
                cus_id_registration_field.setText("");
                cus_address_registration_field.setText("");
                cus_email_registration_field.setText("");

                registration_page.dispose();
                setVisible(true);
                setSize(416, 440);
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(btn_register, "File Not Found...", "Error", JOptionPane.ERROR_MESSAGE);

            } catch (IOException ex) {
                Logger.getLogger(PizzaOrderSystemGUI.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_registerActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        registration_page.dispose();
        setVisible(true);
        setSize(416, 440);
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_order_pizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_order_pizzaActionPerformed
         // TODO add your handling code here:
        loadData();

        try {
            String customer_name = cus_name_field.getText();
            String customer_id = cus_id_field.getText();
            String toppings = (String) field_toppings.getSelectedItem();
            char size = field_size.getText().toUpperCase().charAt(0);
            String current_date = field_date.getText();

            int target_position_cus_dataName = list_customer_data.indexOf(customer_name);

            String target_cus_dataName = list_customer_data.get(target_position_cus_dataName);
            String target_cus_dataID = list_customer_data.get(target_position_cus_dataName + 1);

            if (size != 'S' && size != 'M' && size != 'L') {
                JOptionPane.showMessageDialog(btn_order_pizza, "Please enter the S, M, L size only...", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (customer_name.equals(target_cus_dataName) && customer_id.equals(target_cus_dataID)) {
                Pizza pizza_order = new Pizza(cus_account_name, cus_account_id, toppings, size);
                cart.add(pizza_order);

                JOptionPane.showMessageDialog(btn_order_pizza, "Your pizza has been added to the cart.");

                repeat++;

                JOptionPane.showMessageDialog(btn_order_pizza, "Total number of pizzas in cart = " + repeat);
                field_size.setText("");

                totalPrice = 0;

                for (Pizza p : cart) {
                    totalPrice += p.getPrice();
                    pizza_order.setPrice(size);
                }

                BufferedWriter bw = new BufferedWriter(new FileWriter("customer_order.txt", true));

                bw.write(customer_name);
                bw.newLine();

                bw.write(customer_id);
                bw.newLine();

                bw.write(toppings);
                bw.newLine();

                bw.write(size);
                bw.newLine();

                bw.write(current_date);
                bw.newLine();

                // Close the BufferedWriter
                bw.close();

                JOptionPane.showMessageDialog(btn_order_pizza, "Order have been received...", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(btn_order_pizza, "Account not found...You have to register first if doesn't have account...", "Error", JOptionPane.ERROR_MESSAGE);
            registration_page.setVisible(true);
            registration_page.setSize(450, 390);
            dispose();
        } catch (StringIndexOutOfBoundsException s) {
            JOptionPane.showMessageDialog(btn_order_pizza, "Please fill in all information...", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(PizzaOrderSystemGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_order_pizzaActionPerformed

    private void btn_checkoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_checkoutActionPerformed
        // TODO add your handling code here:
        checkout();
    }//GEN-LAST:event_btn_checkoutActionPerformed

    private void btn_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_closeActionPerformed
        // TODO add your handling code here:
        checkout_page.dispose();
        setVisible(true);
        setSize(416, 440);
    }//GEN-LAST:event_btn_closeActionPerformed

    public void view_cart() {
        JFrame cart_page = new JFrame("View Cart");
        cart_page.setLayout(new BorderLayout());
        cart_page.setSize(400, 400);
        cart_page.setVisible(true);
        cart_page.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);

        DefaultListModel<String> cartModel = new DefaultListModel<>();
        JList<String> cartList = new JList<>(cartModel);

        int list_of_pizza = 1;
        totalPrice = 0;

        //for every cart in PizzaOrderSystemGUI1, loop through all and display data
        for (Pizza p : cart) {
            cartModel.addElement("============ Pizza " + list_of_pizza + " =============");
            list_of_pizza++;
            cartModel.addElement("Topping: " + p.getTopping());
            cartModel.addElement("Size: " + p.getSize());
            cartModel.addElement("Price: RM " + dfZero.format(p.getPrice()));

            totalPrice += p.getPrice();
        }

        if (cart.isEmpty()) {
            JOptionPane.showMessageDialog(null, "The cart is empty.");
            cart_page.dispose();
        } else {
            cartModel.addElement("=================================");
            cartModel.addElement("Total Price = RM " + dfZero.format(totalPrice));
        }

        JScrollPane scrollPane = new JScrollPane(cartList);
        cart_page.add(scrollPane, BorderLayout.CENTER);
    }

    public void checkout() {
        checkout_page.setVisible(true);
        checkout_page.setSize(420, 350);
        checkout_page.setTitle("Checkout Page");

        if (cart.isEmpty()) {
            JOptionPane.showMessageDialog(null, "The cart is empty.");
            checkout_page.dispose();
        } else {
            food_price.setText("TOTAL PRICE: RM " + dfZero.format(totalPrice));
            payment = new JButton("Payment");
        }
    }

    public void search_customer() {
        search_customer.setVisible(true);
        search_customer.setSize(420, 350);
        search_customer.setTitle("Customer Searching");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PizzaOrderSystemGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PizzaOrderSystemGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_checkout;
    private javax.swing.JButton btn_close;
    private javax.swing.JButton btn_order_pizza;
    private javax.swing.JButton btn_register;
    private javax.swing.JButton btn_search_cus;
    private javax.swing.JButton btn_show_customer_searching1;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel checkout;
    private javax.swing.JFrame checkout_page;
    private javax.swing.JLabel cus_address1;
    private javax.swing.JTextField cus_address_registration_field;
    private javax.swing.JLabel cus_email1;
    private javax.swing.JTextField cus_email_registration_field;
    private javax.swing.JLabel cus_id;
    private javax.swing.JLabel cus_id1;
    private javax.swing.JTextField cus_id_field;
    private javax.swing.JTextField cus_id_registration_field;
    private javax.swing.JLabel cus_name;
    private javax.swing.JLabel cus_name1;
    private javax.swing.JTextField cus_name_field;
    private javax.swing.JTextField cus_name_registration_field;
    private javax.swing.JButton cus_register;
    private javax.swing.JButton exit;
    private javax.swing.JTextField field_date;
    private javax.swing.JTextField field_size;
    private javax.swing.JComboBox field_toppings;
    private javax.swing.JLabel food_price;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel label_cus_id;
    private javax.swing.JLabel label_cus_name;
    private javax.swing.JLabel label_order_date;
    private javax.swing.JLabel label_order_size;
    private javax.swing.JLabel label_order_toppings;
    private javax.swing.JButton payment;
    private javax.swing.JFrame registration_page;
    private javax.swing.JFrame search_customer;
    private javax.swing.JLabel text_date1;
    private javax.swing.JLabel text_size1;
    private javax.swing.JLabel text_toppings1;
    private javax.swing.JLabel title;
    private javax.swing.JLabel title1;
    // End of variables declaration//GEN-END:variables
}
